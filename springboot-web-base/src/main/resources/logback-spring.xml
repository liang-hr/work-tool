<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="5 seconds" debug="false">
    <!--  日志添加链路ID  -->
    <conversionRule conversionWord="traceId" converterClass="com.liang3hua.springboot.web.base.common.log.TraceMessageConverter"/>
    <!-- 配置参数logLevel读取application.yml中的log.level属性，如果没有配置，默认是info -->
    <springProperty scope="context" name="logLevel" source="log.level" defaultValue="info" />

    <property name="app.name" value="web-base"/>
    <property name="format_pattern"
              value="%d{yyyy-MM-dd HH:mm:ss.SSS, Asia/Shanghai} [%t] %-5level %logger{50} [%file : %line]- [%traceId]- %msg%n"/>
    <property name="max_his" value="7"/>
    <property name="max_size" value="100MB"/>

    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${format_pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <appender name="file-info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${app.name}_info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${user.dir}/logs/${app.name}_info.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxHistory>${max_his}</maxHistory>
            <maxFileSize>${max_size}</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>${format_pattern}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <appender name="file-error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/${app.name}_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${user.dir}/logs/${app.name}_error.%d{yyyy-MM-dd}.%i.log.zip
            </fileNamePattern>
            <maxHistory>${max_his}</maxHistory>
            <maxFileSize>${max_size}</maxFileSize>
            <totalSizeCap>2GB</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>${format_pattern}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 异步输出 -->
    <appender name="async-file-info" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="file-info"/>
    </appender>

    <appender name="async-file-error" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <appender-ref ref="file-error"/>
    </appender>

    <root level="${logLevel}">
        <appender-ref ref="stdout"/>
        <appender-ref ref="async-file-info"/>
        <appender-ref ref="async-file-error"/>
    </root>

</configuration>
